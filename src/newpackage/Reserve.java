/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newpackage;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import static newpackage.NewClass.getConnection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import static newpackage.Validation.CIDvalidation;

/**
 *
 * @author Krishan
 */
public class Reserve extends javax.swing.JFrame {

    

   
        public  static  String CIDp="" ; 

     Connection connection =null;
   
     public Reserve(String x) throws SQLException {
        connection =getConnection();
        CIDp=x;
        
        initComponents();
    }   
    public Reserve() throws SQLException {
        
        connection =getConnection();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnLoad = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCID = new javax.swing.JTextField();
        txtVID = new javax.swing.JTextField();
        Days = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnINSERT = new javax.swing.JButton();
        txtSEARCH = new javax.swing.JTextField();
        btnReVCancel = new javax.swing.JButton();
        jPID = new javax.swing.JLabel();
        btnPay = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        NeedDriver = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jVehicleAV = new javax.swing.JLabel();
        jRID = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(338, 69, 737, 325));

        btnLoad.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newpackage/images/32/clock.png"))); // NOI18N
        btnLoad.setText("Load");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });
        getContentPane().add(btnLoad, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 69, 151, -1));

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newpackage/images/32/cloud-error.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 69, 143, -1));

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newpackage/images/32/glasses.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(942, 1, 120, 50));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("ReserveID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 135, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("#OfDay");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 178, -1, -1));
        jLabel2.getAccessibleContext().setAccessibleName("Designation");
        jLabel2.getAccessibleContext().setAccessibleDescription("");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("CustomerID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 227, -1, -1));

        txtCID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtCID.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtCIDInputMethodTextChanged(evt);
            }
        });
        txtCID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCIDActionPerformed(evt);
            }
        });
        txtCID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCIDKeyReleased(evt);
            }
        });
        getContentPane().add(txtCID, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 224, 76, -1));

        txtVID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtVID.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                txtVIDMouseMoved(evt);
            }
        });
        txtVID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtVIDMouseClicked(evt);
            }
        });
        txtVID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVIDActionPerformed(evt);
            }
        });
        txtVID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtVIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtVIDKeyTyped(evt);
            }
        });
        getContentPane().add(txtVID, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 278, 76, -1));

        Days.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50" }));
        Days.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                DaysComponentShown(evt);
            }
        });
        Days.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                DaysItemStateChanged(evt);
            }
        });
        Days.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DaysActionPerformed(evt);
            }
        });
        Days.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                DaysAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(Days, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 175, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("VehicleID");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 281, 57, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("PaymentID");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, -1));

        btnINSERT.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnINSERT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newpackage/images/32/bookmark.png"))); // NOI18N
        btnINSERT.setText("INSERT");
        btnINSERT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnINSERTActionPerformed(evt);
            }
        });
        getContentPane().add(btnINSERT, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 113, 50));

        txtSEARCH.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        getContentPane().add(txtSEARCH, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 11, 372, 30));

        btnReVCancel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnReVCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newpackage/images/32/cloud-error.png"))); // NOI18N
        btnReVCancel.setText("Cancel");
        btnReVCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReVCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btnReVCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, 110, 50));

        jPID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jPID.setText("PaymentID");
        getContentPane().add(jPID, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 380, -1, -1));

        btnPay.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newpackage/images/32/bill.png"))); // NOI18N
        btnPay.setText("Payment");
        btnPay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        getContentPane().add(btnPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 410, -1, 50));

        jPanel1.setLayout(null);
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 0, 0));

        NeedDriver.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YES", "NO" }));
        NeedDriver.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                NeedDriverComponentShown(evt);
            }
        });
        NeedDriver.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                NeedDriverItemStateChanged(evt);
            }
        });
        NeedDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NeedDriverActionPerformed(evt);
            }
        });
        NeedDriver.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                NeedDriverAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(NeedDriver, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 330, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Need Driver");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 333, -1, -1));

        jVehicleAV.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jVehicleAV.setText("Status");
        getContentPane().add(jVehicleAV, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 280, 100, 20));

        jRID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRID.setText("RID");
        getContentPane().add(jRID, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 135, 74, -1));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 50));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 1150, 50));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newpackage/images/background-polygon-lightblue.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1150, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
                 
        jTable1.setModel(new DefaultTableModel(null,new String[]{}));
        jRID.setText("");
        
        txtVID.setText("");
       
        jPID.setText("");
        
        jVehicleAV.setText("");
         
        txtCID.setEnabled(true);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed

    
        conDatabase();
        
    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        SearchJtable();
       
    }//GEN-LAST:event_btnSearchActionPerformed

    private void DaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DaysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DaysActionPerformed

    private void DaysAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_DaysAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_DaysAncestorAdded

    private void DaysComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_DaysComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_DaysComponentShown

    private void DaysItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_DaysItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_DaysItemStateChanged

    private void txtCIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCIDActionPerformed
         
    }//GEN-LAST:event_txtCIDActionPerformed

    private void btnINSERTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnINSERTActionPerformed
       int RENTAL;
      
       if( !txtVID.getText().isEmpty() && Character.isDigit( txtVID.getText().charAt(0))
          &&!txtCID.getText().isEmpty() && CIDvalidation(txtCID.getText()))
       {
         
           RENTAL=CarRentalREV();
           if("YES".equals(NeedDriver.getSelectedItem().toString()))
           {
               RENTAL+=1000;
               
           }
           InsertReserveDatabase(RENTAL);
       }
       else{
            txtCID.setEnabled(true);
            txtCID.setText("");
            JOptionPane.showMessageDialog(null, "VehicleID is Empty");

           
           
       }
       
       btnClear.doClick();
       btnLoad.doClick();
    }//GEN-LAST:event_btnINSERTActionPerformed

    private void btnReVCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReVCancelActionPerformed
        int ReqCancel=JOptionPane.showConfirmDialog(null, "Are You Sure ? ");
        CIDp=txtCID.getText();
        if(ReqCancel==0)
        {
            FindNullRowRev();
            CancelReVDatabase();
        btnClear.doClick();
        }
    }//GEN-LAST:event_btnReVCancelActionPerformed

    private void txtVIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtVIDMouseClicked
       txtCID.setEnabled(false);
    }//GEN-LAST:event_txtVIDMouseClicked

    private void txtVIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVIDActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int r=jTable1.getSelectedRow();
        jRID.setText( jTable1.getValueAt(r, 0).toString());
        Days.setSelectedItem( jTable1.getValueAt(r, 2).toString());
        txtCID.setText( jTable1.getValueAt(r, 5).toString());
         jVehicleAV.setText( jTable1.getValueAt(r, 7).toString());
          
          try { 
              jPID.setText(jTable1.getValueAt(r, 6).toString());
          } 
          catch(NullPointerException e)
          {  
              jPID.setText("");
          }
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
         CIDp=txtCID.getText();
         if(!CIDp.isEmpty())
         {
         try {
             
            PayBILL py = new PayBILL();
              py.setVisible(true);
               btnClear.doClick();
              dispose();
         } catch (SQLException ex) {
             Logger.getLogger(Reserve.class.getName()).log(Level.SEVERE, null, ex);
         }
         }
         else{
         
             JOptionPane.showMessageDialog(null, "Please Enter CustomerID to Payment!");
         }
       
    }//GEN-LAST:event_btnPayActionPerformed

    private void NeedDriverItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_NeedDriverItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_NeedDriverItemStateChanged

    private void NeedDriverAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_NeedDriverAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_NeedDriverAncestorAdded

    private void NeedDriverComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_NeedDriverComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_NeedDriverComponentShown

    private void NeedDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NeedDriverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NeedDriverActionPerformed

    private void txtVIDMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtVIDMouseMoved
       
               
    }//GEN-LAST:event_txtVIDMouseMoved

    private void txtVIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVIDKeyReleased
      
        if( !txtVID.getText().isEmpty() && Character.isDigit(txtVID.getText().charAt(0)) )
       {
           String VStatusRV=VehicleAvailbleREV();
           if("YES".equals(VStatusRV))
           {
               jVehicleAV.setText("Availlable");
           }
           else{
               
               jVehicleAV.setText("Not Availbale ");
               txtVID.setText("");
               
           }
        
       }
        else if(!txtVID.getText().isEmpty())
        {
         JOptionPane.showMessageDialog(null, "VehicleID should be integer only");
        }
       
      
        
    }//GEN-LAST:event_txtVIDKeyReleased

    private void txtVIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVIDKeyTyped
       
    }//GEN-LAST:event_txtVIDKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        txtCID.setText(CIDp);
        
        
        
       if(!CIDvalidation(txtCID.getText())) 
       {
           txtCID.setText("");
       }
        
       
    }//GEN-LAST:event_formWindowOpened

    private void txtCIDInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtCIDInputMethodTextChanged
        
    }//GEN-LAST:event_txtCIDInputMethodTextChanged

    private void txtCIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCIDKeyReleased
        
       
    }//GEN-LAST:event_txtCIDKeyReleased

    /**
     *
     */
    
  
   
    
    
    
      public  void conDatabase() {
            
          

            // Create and execute a SELECT SQL statement.
            String selectSql = "SELECT * " + "FROM Reservation ";

            try (Statement statement = connection.createStatement();
                 ResultSet resultSet = statement.executeQuery(selectSql)) {

               jTable1.setModel(DbUtils.resultSetToTableModel(resultSet));
                
            }
        
        catch (Exception e) {
           
        }
    
    }
      
      
      
      
      /*Search*/
      public  void SearchJtable() {
      
      
     
           
            
           
            // Create and execute a SELECT SQL statement.
            String selectSql = "SELECT * " + "FROM Reservation "+ "WHERE ReservationID LIKE '%"+txtSEARCH.getText() +"%'"  +"  OR PID LIKE '%"+txtSEARCH.getText()+"%'"  + "OR VID LIKE '%"+txtSEARCH.getText()+"%'" + "OR CID LIKE '%"+txtSEARCH.getText()+"%'"  ;

            try (Statement statement = connection.createStatement();
                 ResultSet resultSet = statement.executeQuery(selectSql)) {
                
                

                
                jTable1.setModel(DbUtils.resultSetToTableModel(resultSet));
                
                
                
            }
        
        catch (Exception e) {
            
        }
    
      
      
      
      }
    
    
    
    
    
    
    
    public  void InsertReserveDatabase(int rental) {
            
        
            // Prepared statement to insert data
            
               java.util.Date date = new java.util.Date();
                java.sql.Timestamp sqlTimeStamp = new java.sql.Timestamp(date.getTime());
            
                String insertSql = "INSERT INTO Reservation (ReservedDate, NoOfDays,ReturnDate,Rental,CID,VID,ReturnComplete ) VALUES (?,?,DATEADD(day,?,?),?,?,?,'NO');";

               
                 
                try (PreparedStatement prep = connection.prepareStatement(insertSql)) {
                        
                    int Dayz=Integer.parseInt(Days.getSelectedItem().toString());
                    prep.setTimestamp(1, sqlTimeStamp);
                       prep.setInt(2,Dayz);
                        prep.setInt(3, Dayz);
                         prep.setTimestamp(4, sqlTimeStamp);
                         
                         prep.setInt(5, rental*Dayz);
                        prep.setInt(6, Integer.parseInt(txtCID.getText()));
                        prep.setInt(7, Integer.parseInt(txtVID.getText()));
                      

                        int count = prep.executeUpdate();
                   //Update Vehicle Status     
                 UPDATEVehicleStatus( NeedDriver.getSelectedItem().toString() ,"NO",Integer.parseInt(txtVID.getText())  );
                        
            JOptionPane.showMessageDialog(null,"Insert Complete!");
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"CustomerID is not Registered!");
            txtCID.setEnabled(true);

        }
    
    }
    
    
    
    
    
    
    
  
    
    
    
     public  void CancelReVDatabase() {
            
          
            // Prepared statement to insert data
                String updateSql = "DELETE Reservation WHERE CID= "+CIDp +" AND PID IS NULL";

               
                try (PreparedStatement prep = connection.prepareStatement(updateSql)) {
                      
         
                        
                        prep.executeUpdate();
              JOptionPane.showMessageDialog(null,"Successful");

                        
        }
        catch (Exception e) {
           
        }
    
    }
     
     
     
    
    public  int CarRentalREV(){
    
     
            // Create and execute a SELECT SQL statement.
            String selectSql = "SELECT * " + "FROM Vehicle " + "WHERE VehicleID="+txtVID.getText() ;

            try (Statement statement = connection.createStatement();
                 ResultSet resultSet = statement.executeQuery(selectSql)) {

             int Rental = 0;
                    while (resultSet.next())
                   {
                     Rental=resultSet.getInt(3);
                     
                    }
                    return Rental;
            }
        
        catch (Exception e) {
         
            return 0;
        }
    }
    
    
    
    
      
    public  void UPDATEVehicleStatus(String NeedD,String STATUS,int VehicleID) {
            
          
            // Prepared statement to insert data
                String updateSql = "UPDATE Vehicle " + "SET VStatus=? , WithDriver=? "+  "WHERE VehicleID=? ;";

               
                try (PreparedStatement prep = connection.prepareStatement(updateSql)) {
                      
                    
                        prep.setString(1, STATUS);
                        prep.setString(2, NeedD);
                        prep.setInt(3, VehicleID);
                       
                        
                        
                        
                      prep.executeUpdate();
                        
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    
    }
    
    
    
    
    
    
    
    
      public  void FindNullRowRev() {
         
  
          
            // Create and execute a SELECT SQL statement.
            String selectSql = "SELECT VID " + "FROM Reservation WHERE CID="+CIDp +" AND PID IS NULL";

            try (Statement statement = connection.createStatement();
                 ResultSet resultSet = statement.executeQuery(selectSql)) {

        
                while (resultSet.next())
                {
                    UPDATEVehicleStatus("","YES",resultSet.getInt(1));
                }
                
            }
        
        catch (Exception e) {
        }
    
    }
      
      
 
      
      
      
      
      
       
    
    public  String VehicleAvailbleREV() {
    
     
            // Create and execute a SELECT SQL statement.
            String selectSql = "SELECT VStatus " + "FROM Vehicle " + "WHERE VehicleID ="+txtVID.getText() ;

              String VehicleStatus=null ;
            try (Statement statement = connection.createStatement();
                 ResultSet resultSet = statement.executeQuery(selectSql)) {

                  
                    while (resultSet.next())
                {
                     VehicleStatus=resultSet.getString(1);
                     
                     System.out.println(VehicleStatus);
                     
                }
                    
                    
            }
        
        catch (SQLException e) {
        }
            return VehicleStatus;
    }
      
      
      
      
      
    
    
    
    
    
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reserve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reserve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reserve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reserve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Reserve().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Reserve.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Days;
    private javax.swing.JComboBox<String> NeedDriver;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnINSERT;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnReVCancel;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JLabel jPID;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jRID;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jVehicleAV;
    private javax.swing.JTextField txtCID;
    private javax.swing.JTextField txtSEARCH;
    private javax.swing.JTextField txtVID;
    // End of variables declaration//GEN-END:variables


   
}
